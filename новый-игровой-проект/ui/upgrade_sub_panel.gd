extends Panel

@onready var points_label = $MainContainer/PointsLabel
@onready var stats_container = $MainContainer/StatsContainer
@onready var accept_button = $MainContainer/AcceptButton
@onready var stat_tooltip = preload("res://ui/StatTooltip.tscn").instantiate()

var player: Node
var temp_stats = {}
var temp_points = 0
var is_tooltip_visible := false
var hide_timer: Timer
var current_stat: String = ""

func _ready():
	add_child(stat_tooltip)
	stat_tooltip.hide()
	add_to_group("upgrade_panels")
	
	# –¢–∞–π–º–µ—Ä –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–∫—Ä—ã—Ç–∏—è
	hide_timer = Timer.new()
	hide_timer.one_shot = true
	hide_timer.timeout.connect(_real_hide_tooltip)
	add_child(hide_timer)
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —Å–∞–º—É –ø–æ–¥—Å–∫–∞–∑–∫—É
	stat_tooltip.mouse_entered.connect(_on_tooltip_mouse_entered)
	stat_tooltip.mouse_exited.connect(_on_tooltip_mouse_exited)

func setup(p):  
	player = p
	hide()
	update_display()

func update_display():
	if !player: 
		player = get_tree().get_first_node_in_group("player")
		if !player: return
	
	temp_points = player.skill_points
	temp_stats = {
		"strength": player.base_stats["strength"],
		"agility": player.base_stats["agility"],
		"endurance": player.base_stats["endurance"],
		"intellect": player.base_stats["intellect"]
	}
	update_ui()

func update_ui():
	points_label.text = "–û—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π: %d" % temp_points
	
	for child in stats_container.get_children():
		child.queue_free()
	
	add_stat_row("‚öîÔ∏è –°–∏–ª–∞", "strength")
	add_stat_row("üèπ –õ–æ–≤–∫–æ—Å—Ç—å", "agility")
	add_stat_row("üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å", "endurance")
	add_stat_row("üìñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç", "intellect")
	
	accept_button.disabled = temp_points > 0

func add_stat_row(name: String, stat: String):
	var hbox = HBoxContainer.new()
	hbox.alignment = BoxContainer.ALIGNMENT_CENTER
	
	# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è + –æ–±–ª–∞—Å—Ç–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏—è
	var name_container = Control.new()
	name_container.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	name_container.mouse_filter = Control.MOUSE_FILTER_PASS
	
	# –¢–µ–∫—Å—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
	var label = Label.new()
	label.text = "%s (–£—Ä. %d)" % [name, temp_stats[stat]]
	label.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	
	# –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –Ω–∞–≤–µ–¥–µ–Ω–∏—è
	var tooltip_area = ColorRect.new()
	tooltip_area.color = Color(0, 0, 0, 0)
	tooltip_area.mouse_filter = Control.MOUSE_FILTER_STOP
	tooltip_area.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	tooltip_area.custom_minimum_size = Vector2(200, 40)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
	
	# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
	tooltip_area.mouse_entered.connect(_show_stat_tooltip.bind(stat, tooltip_area))
	tooltip_area.mouse_exited.connect(_hide_stat_tooltip)
	
	name_container.add_child(label)
	name_container.add_child(tooltip_area)
	
	# –ö–Ω–æ–ø–∫–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è
	var left_btn = Button.new()
	left_btn.text = "<"
	left_btn.disabled = temp_stats[stat] <= 1
	left_btn.pressed.connect(_on_stat_decreased.bind(stat))
	
	var value_label = Label.new()
	value_label.text = str(temp_stats[stat])
	value_label.horizontal_alignment = HORIZONTAL_ALIGNMENT_CENTER
	value_label.custom_minimum_size.x = 30
	
	var right_btn = Button.new()
	right_btn.text = ">"
	right_btn.disabled = temp_points <= 0
	right_btn.pressed.connect(_on_stat_increased.bind(stat))
	
	hbox.add_child(name_container)
	hbox.add_child(left_btn)
	hbox.add_child(value_label)
	hbox.add_child(right_btn)
	stats_container.add_child(hbox)

func _show_stat_tooltip(stat: String, control: Control):
	# –û—Ç–º–µ–Ω—è–µ–º —Å–∫—Ä—ã—Ç–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ
	hide_timer.stop()
	
	# –ï—Å–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç—É –ø–æ–¥—Å–∫–∞–∑–∫—É - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
	if is_tooltip_visible and current_stat == stat:
		return
	
	current_stat = stat
	
	var descriptions = {
		"strength": "[b][color=#ff5555]‚öîÔ∏è –°–∏–ª–∞[/color][/b]\n" +
					"‚Ä¢ +3% –∫ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º—É —É—Ä–æ–Ω—É\n" +
					"‚Ä¢ +5 –∫ –∑–¥–æ—Ä–æ–≤—å—é –∑–∞ —É—Ä–æ–≤–µ–Ω—å\n" +
					"‚Ä¢ +1% –∑–∞—â–∏—Ç–∞ –∫–∞–∂–¥—ã–µ 5 —É—Ä.",
		"agility": "[b][color=#55ff55]üèπ –õ–æ–≤–∫–æ—Å—Ç—å[/color][/b]\n" +
				   "‚Ä¢ +5% —Å–∫–æ—Ä–æ—Å—Ç—å –∞—Ç–∞–∫–∏ –∫–∞–∂–¥—ã–µ 2 —É—Ä.\n" +
				   "‚Ä¢ +1.5% —à–∞–Ω—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞—Ä–∞\n" +
				   "‚Ä¢ +1% —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è",
		"endurance": "[b][color=#5555ff]üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å[/color][/b]\n" +
					 "‚Ä¢ +10 –∫ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –∑–∞ —É—Ä–æ–≤–µ–Ω—å\n" +
					 "‚Ä¢ +2% —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —É—Ä–æ–Ω—É\n" +
					 "‚Ä¢ -1% –ø–æ–ª—É—á–∞–µ–º—ã–π —É—Ä–æ–Ω",
		"intellect": "[b][color=#aa55ff]üìñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç[/color][/b]\n" +
					 "‚Ä¢ +8% —É—Ä–æ–Ω –æ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π\n" +
					 "‚Ä¢ -2% –≤—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏\n" +
					 "‚Ä¢ +10% –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–æ–≤"
	}
	
	var rich_text = stat_tooltip.get_node("RichTextLabel")
	rich_text.text = descriptions.get(stat, "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
	
	# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
	rich_text.scroll_active = false
	rich_text.custom_minimum_size = Vector2(300, 150)
	stat_tooltip.reset_size()
	
	# –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
	stat_tooltip.position = Vector2(200, 500)
	
	# –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
	stat_tooltip.modulate.a = 0
	stat_tooltip.show()
	is_tooltip_visible = true
	
	var tween = create_tween()
	tween.tween_property(stat_tooltip, "modulate:a", 1.0, 0.2)

func _hide_stat_tooltip():
	# –ï—Å–ª–∏ –∫—É—Ä—Å–æ—Ä –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å–∞–º—É –ø–æ–¥—Å–∫–∞–∑–∫—É - –Ω–µ —Å–∫—Ä—ã–≤–∞–µ–º
	if stat_tooltip.get_global_rect().grow(20).has_point(get_global_mouse_position()):
		return
	
	# –°—Ç–∞–≤–∏–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º
	hide_timer.start(0.3)

func _real_hide_tooltip():
	var tween = create_tween()
	tween.tween_property(stat_tooltip, "modulate:a", 0.0, 0.15)
	await tween.finished
	stat_tooltip.hide()
	is_tooltip_visible = false
	current_stat = ""

func _on_tooltip_mouse_entered():
	# –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫—É –æ—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è
	hide_timer.stop()

func _on_tooltip_mouse_exited():
	# –ü—Ä–∏ —É—Ö–æ–¥–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä—ã—Ç–∏–µ
	_hide_stat_tooltip()

func _on_stat_increased(stat: String):
	if temp_points > 0:
		temp_stats[stat] += 1
		temp_points -= 1
		update_ui()

func _on_stat_decreased(stat: String):
	if temp_stats[stat] > 1:
		temp_stats[stat] -= 1
		temp_points += 1
		update_ui()

func _on_accept_button_pressed():
	if !player: return
	
	for stat in temp_stats:
		var diff = temp_stats[stat] - player.base_stats[stat]
		if diff > 0:
			player.upgrade_stat(stat, diff)
	
	hide()
	player.stats_updated.emit()

func _on_close_button_pressed():
	hide()

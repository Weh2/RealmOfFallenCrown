extends Panel

@onready var points_label = $MainContainer/PointsLabel
@onready var stats_container = $MainContainer/StatsContainer
@onready var accept_button = $MainContainer/AcceptButton

var player: Node
var temp_stats = {}
var temp_points = 0


func _ready():
	add_to_group("upgrade_panels")  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π

func setup(p):  
	player = p
	hide()  # –°–∫—Ä—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	update_display()


func update_display():
	if !player: 
		player = get_tree().get_first_node_in_group("player")
		if !player: return
	
	temp_points = player.skill_points
	temp_stats = {
		"strength": player.base_stats["strength"],
		"agility": player.base_stats["agility"],
		"endurance": player.base_stats["endurance"],
		"intellect": player.base_stats["intellect"]
	}
	update_ui()

func update_ui():
	points_label.text = "–û—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π: %d" % temp_points
	
	# –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
	for child in stats_container.get_children():
		child.queue_free()
	
	
	# –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
	add_stat_row("‚öîÔ∏è –°–∏–ª–∞", "strength")
	add_stat_row("üèπ –õ–æ–≤–∫–æ—Å—Ç—å", "agility")
	add_stat_row("üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å", "endurance")
	add_stat_row("üìñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç", "intellect")
	
	# –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–Ω—è—Ç—å" –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –æ—á–∫–∏
	accept_button.disabled = temp_points > 0

func add_stat_row(name: String, stat: String):
	var hbox = HBoxContainer.new()
	hbox.alignment = BoxContainer.ALIGNMENT_CENTER
	
	# –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
	var label = Label.new()
	label.text = "%s (–£—Ä. %d)" % [name, temp_stats[stat]]
	label.size_flags_horizontal = Control.SIZE_EXPAND_FILL
	
	# –ö–Ω–æ–ø–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è
	var left_btn = Button.new()
	left_btn.text = "<"
	left_btn.disabled = temp_stats[stat] <= 1  # –ù–µ–ª—å–∑—è —É–º–µ–Ω—å—à–∏—Ç—å –Ω–∏–∂–µ 1
	left_btn.pressed.connect(_on_stat_decreased.bind(stat))
	
	# –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
	var value_label = Label.new()
	value_label.text = str(temp_stats[stat])
	value_label.horizontal_alignment = HORIZONTAL_ALIGNMENT_CENTER
	value_label.custom_minimum_size.x = 30
	
	# –ö–Ω–æ–ø–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è
	var right_btn = Button.new()
	right_btn.text = ">"
	right_btn.disabled = temp_points <= 0  # –ù–µ—Ç –æ—á–∫–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
	right_btn.pressed.connect(_on_stat_increased.bind(stat))
	
	hbox.add_child(label)
	hbox.add_child(left_btn)
	hbox.add_child(value_label)
	hbox.add_child(right_btn)
	stats_container.add_child(hbox)

func _on_stat_increased(stat: String):
	if temp_points > 0:
		temp_stats[stat] += 1
		temp_points -= 1
		update_ui()

func _on_stat_decreased(stat: String):
	if temp_stats[stat] > 1:
		temp_stats[stat] -= 1
		temp_points += 1
		update_ui()

func _on_accept_button_pressed():
	if !player: return
	
	# –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
	for stat in temp_stats:
		var diff = temp_stats[stat] - player.base_stats[stat]
		if diff > 0:
			player.upgrade_stat(stat, diff)
	
	hide()
	player.stats_updated.emit()  # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
func _on_close_button_pressed():
	# –û—Ç–º–µ–Ω–∞ - –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	hide()
